model{ 
#LIKELIHOOD
 for (morph.idx in 1:Nmorph){ for (lausetyyppi.idx in 1:Nlausetyyppi){ for (funct.idx in 1:Nfunct){ 
    observations[ morph.idx, lausetyyppi.idx, funct.idx, 1:Nlocation3] ~ dmulti(probs[ morph.idx, lausetyyppi.idx, funct.idx, 1:Nlocation3], totals[ morph.idx, lausetyyppi.idx, funct.idx])
    for (location3.idx in 1:Nlocation3){ 
        probs[ morph.idx, lausetyyppi.idx, funct.idx, location3.idx] <- phi[ morph.idx, lausetyyppi.idx, funct.idx, location3.idx] / sum(phi[ morph.idx, lausetyyppi.idx, funct.idx, 1:Nlocation3])
        log(phi[ morph.idx, lausetyyppi.idx, funct.idx, location3.idx]) <- location3[location3.idx] +  morph[morph.idx, location3.idx] + lausetyyppi[lausetyyppi.idx, location3.idx] +  funct[funct.idx, location3.idx]  
}
}}}
#PRIORS
sigma.location3 ~ dt(0,1,1) T(0,)
tau.location3 <- pow(sigma.location3,-2)
 
 
sigma.morph ~ dt(0,1,1) T(0,)
tau.morph <- pow(sigma.morph,-2)
 
 
sigma.lausetyyppi ~ dt(0,1,1) T(0,)
tau.lausetyyppi <- pow(sigma.lausetyyppi,-2)
 
 
sigma.funct ~ dt(0,1,1) T(0,)
tau.funct <- pow(sigma.funct,-2)
 
 
for (location3.idx in 1:Nlocation3){ 
    location3[location3.idx] ~ dnorm(0, tau.location3)
}
 
for (location3.idx in 1:Nlocation3){ 
 
    #A BINARY PREDICTOR:
    morph.raw[location3.idx] ~ dnorm(0, tau.morph)
    morph[1, location3.idx] <- morph.raw[location3.idx] - mean(morph.raw[1:Nlocation3])
    morph[2, location3.idx] <- -morph[1, location3.idx]
 
    for (lausetyyppi.idx in 1:Nlausetyyppi){ 
        lausetyyppi.raw[lausetyyppi.idx, location3.idx] ~ dnorm(0, tau.lausetyyppi)
        lausetyyppi[lausetyyppi.idx, location3.idx] <- 
            lausetyyppi.raw[lausetyyppi.idx, location3.idx] 
            - mean(lausetyyppi.raw[1:Nlausetyyppi, location3.idx]) 
            - mean(lausetyyppi.raw[lausetyyppi.idx, 1:Nlocation3]) 
            + mean(lausetyyppi.raw[1:Nlausetyyppi, 1:Nlocation3]) 
        #INTERACTION
}
    for (funct.idx in 1:Nfunct){ 
        funct.raw[funct.idx, location3.idx] ~ dnorm(0, tau.funct)
        funct[funct.idx, location3.idx] <- 
            funct.raw[funct.idx, location3.idx] 
            - mean(funct.raw[1:Nfunct, location3.idx]) 
            - mean(funct.raw[funct.idx, 1:Nlocation3]) 
            + mean(funct.raw[1:Nfunct, 1:Nlocation3]) 
        #INTERACTION
}
}
 
#STANDARD DEVIATIONS
std.morph <- sd(morph[,])
std.lausetyyppi <- sd(lausetyyppi[,])
std.funct <- sd(funct[,])
}
